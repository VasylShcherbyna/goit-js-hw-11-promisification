{"version":3,"sources":["js/promise-01.js"],"names":["delay","ms","Promise","resolve","setTimeout","logger","time","console","log","then"],"mappings":";AAKA,IAAMA,EAAQ,SAAAC,GACL,OAAA,IAAIC,QAAS,SAAAC,GAClBC,WAAW,WACTD,EAAQF,IACPA,MAIDI,EAAS,SAAAC,GAAQC,OAAAA,QAAQC,IAAsBF,kBAAAA,OAAAA,EAAlC,QAGnBN,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,MAAMS,KAAKJ","file":"promise-01.6d8e7def.js","sourceRoot":"..\\src","sourcesContent":["// Напиши функцию delay(ms), которая возвращает промис, \n// переходящий в состояние \"resolved\" через ms миллисекунд. \n// Значением исполнившегося промиса должно быть то кол-во миллисекунд \n// которое передали во время вызова функции delay.\n\nconst delay = ms => {\n  return new Promise (resolve => {\n    setTimeout(() => {\n      resolve(ms);\n    }, ms);\n  })\n};\n\nconst logger = time => console.log(`Resolved after ${time}ms`);\n\n// Вызовы функции для проверки\ndelay(2000).then(logger); // Resolved after 2000ms\ndelay(1000).then(logger); // Resolved after 1000ms\ndelay(1500).then(logger); // Resolved after 1500ms"]}